<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.3.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<context:component-scan base-package="com.spring.cache.aop" />

	<bean id="ehCacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
		p:configLocation="classpath:ehcache/ehcache1.xml" />

	<bean id="springEhCacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"
		c:cacheManager-ref="ehCacheManager" />

	<bean id="specifiedCacheResolver"
		class="org.springframework.cache.interceptor.NamedCacheResolver"
		c:cacheManager-ref="springEhCacheManager" c:cacheNames="line_region" />

	<bean id="cacheService" class="com.spring.cache.ehcache.EhCacheService" />
	

	<!-- 以下是使用注解的方式进行的缓存配置 -->
	<beans profile="annotationCacheConfig">
		<!-- 如果没有给出cache-resolver的话，那么则使用SimpleCacheResolver作为默认的CacheResolver。什么时候使用默认的CacheResolver? 
			在@Cache*注解中，没有给出cacheResolver属性的，则被认为是使用默认的CacheResolver。 -->
		<cache:annotation-driven cache-manager="springEhCacheManager" />
	</beans>

	<!-- 以下是使用aop的方式进行的缓存配置 -->
	<beans profile="aopCacheConfig">
		<!-- 以下配置是配置一个CacheInterceptor对象 -->
		<cache:advice id="cacheAdvice" cache-manager="springEhCacheManager">
			<cache:caching>
				<!-- 注意：method属性的值可以有通配符，但不能是以逗号分隔的多个方法。例如可以是cacheableQuery*，但不能是cacheableQuery1,cacheableQuery2 -->
				<!-- 但是cache属性的值是以逗号分隔的cacheName。例如：dept_region,line_region -->
				<!-- 下面这行的意义代表：如果连接点方法的名称是cacheableQuery1，那么为其增加@Cacheable缓存操作，该缓存操作的cacheNames为dept_region， 
					这个缓存操作的cache-manager为springEhCacheManager -->
				<cache:cacheable method="cacheableQuery1" cache="dept_region" />
				<cache:cacheable method="cacheableQuery2" cache="line_region" />
				<cache:cacheable method="cacheableQuery3" cache="date_region" />
			</cache:caching>
			<cache:caching>
				<!-- 注意：method属性的值可以包含通配符*，但不能只有*。例如可以是query*，但不能只是*，因为这样会匹配不到任何方法的 -->
				<cache:cacheable method="multipleCacheableQuery"
					cache="dept_region,line_region,date_region" />
				<cache:cache-evict method="multipleCacheableQuery"
					cache="dept_region,line_region,date_region" before-invocation="true"
					all-entries="false" />
			</cache:caching>
			<cache:caching>
				<cache:cache-put method="multipulePutQuery"
					cache="dept_region,line_region,date_region" />
			</cache:caching>
		</cache:advice>

		<aop:config>
			<!-- 该配置的意义是，将advice-ref引用的CacheInterceptor存储到连接点方法对应的责任链中 -->
			<aop:advisor advice-ref="cacheAdvice"
				pointcut="execution(@org.springframework.cache.annotation.* public * com.spring.cache.*.*Cache*.*(..))" />
		</aop:config>
	</beans>
</beans>
